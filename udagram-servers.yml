Description: >
    Shamsuddeen Abdulkadir / Udacity - IaC Project
    This creates the server for an Instagram-like app

# Parameter
Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

# Srever resources
Resources:

    # The security group below with ingress/egress rules allowing traffic on port 80
    LoadBalancerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to our load balancer
            VpcId:
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 80
                ToPort: 80
                CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
              - IpProtocol: tcp
                FromPort: 80
                ToPort: 80
                CidrIp: 0.0.0.0/0
    
    WebServerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to our hosts and SSH from local only
            VpcId:
                Fn::ImportValue:
                 !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 80
                ToPort: 80
                CidrIp: 0.0.0.0/0
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
              - IpProtocol: tcp
                FromPort: 0
                ToPort: 65535
                CidrIp: 0.0.0.0/0

    WebServerConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Metadata:
            Comment: Install Web Server 
        Properties:
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    sudo apt-get update -y
                    sudo apt-get install apache2 -y
                    sudo systemctl start apache2.service 
                    cd /var/www/html
                    echo "it works! Udagram, Udacity!" > index.html
            ImageId: ami-08d4ac5b634553e16
            SecurityGroups:
              - Ref: WebServerSecurityGroup
            InstanceType: t3.medium
            BlockDeviceMappings:
              - DeviceName: "/dev/sdk"
                Ebs:
                    VolumeSize: 10
                    DeleteOnTermination: true

    WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier:
              - Fn::ImportValue: !Sub '${EnvironmentName}-PRIV-NETS'
            LaunchConfigurationName: !Ref WebServerConfig
            MinSize: 4
            MaxSize: 5
            TargetGroupARNs:
              - Ref: WebAppTargetGroup

    WebAppLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Subnets:
              - Fn::ImportValue: !Sub '${EnvironmentName}-PUB1-SN'
              - Fn::ImportValue: !Sub '${EnvironmentName}-PUB2-SN'
            SecurityGroups:
              - Ref: LoadBalancerSecurityGroup
    
    WebAppListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            DefaultActions:
              - Type: forward
                TargetGroupArn: !Ref WebAppTargetGroup
            LoadBalancerArn: !Ref WebAppLoadBalancer
            Port: 80
            Protocol: HTTP

    WebAppLR:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            Actions:
              - Type: forward
                TargetGroupArn: !Ref WebAppTargetGroup
            Conditions:
              - Field: path-pattern
                Values: [/]
            ListenerArn: !Ref WebAppListener
            Priority: 1

    WebAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 35
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 10
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 6
            VpcId: 
              Fn::ImportValue:
                Fn::Sub: "${EnvironmentName}-VPCID"

Outputs:

    LoadBalancer:
      Description: Output referene for the load balancer
      Value: !Ref WebAppLoadBalancer


    LoadBalancerUrl:
      Description: The loadbalancer url
      Value: !Join [ "", [ "http://", !GetAtt WebAppLoadBalancer.DNSName ] ]